# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2021, Conny Gustafsson
# This file is distributed under the same license as the AUTOSAR package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AUTOSAR 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-15 11:11+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../basics.rst:4
msgid "Basic Concepts"
msgstr ""

#: ../../basics.rst:6
msgid ""
"This document describes the basic concepts of AUTOSAR and how you work "
"with them from Python."
msgstr ""

#: ../../basics.rst:11
msgid "ARXML"
msgstr ""

#: ../../basics.rst:13
msgid ""
"An AUTOSAR XML file or ARXML for short is just a normal XML file with the"
" file extension \".arxml\". The root XML element is called <AUTOSAR>. "
"Inside the AUTOSAR (XML) element you will typically a collection of "
"AUTOSAR packages each containing elements."
msgstr ""

#: ../../basics.rst:32
msgid "Workspace"
msgstr ""

#: ../../basics.rst:34
msgid ""
"The AUTOSAR :ref:`workspace <ar4_workspace>` object is the root object "
"that you use to create, load or save AUTOSAR XML files in Python. You "
"create a new :ref:`workspace <ar4_workspace>` instance by calling the "
":ref:`autosar.workspace<ar4_autosar_workspace_method>` factory method."
msgstr ""

#: ../../basics.rst:44
msgid "AUTOSAR Version"
msgstr ""

#: ../../basics.rst:46
msgid ""
"When you create your workspace you should specify which AUTOSAR version "
"you intend to use. By default an AUTOSAR v3.0 workspace is created."
msgstr ""

#: ../../basics.rst:48
msgid "Example:"
msgstr ""

#: ../../basics.rst:56
msgid ""
"When loading ARXML from file you do not need to manually set the version."
" The AUTOSAR version is read from the ARXML file."
msgstr ""

#: ../../basics.rst:61
msgid "Packages"
msgstr ""

#: ../../basics.rst:63
msgid ""
"An AUTOSAR :ref:`ar4_package_Package` is a container for your "
":ref:`elements <basic_elements>`. It can also contain sub-packages. "
"Packages offers a way to separate your elements into different categories"
" such as SWC namespaces or by element types."
msgstr ""

#: ../../basics.rst:66
msgid ""
"Use the :ref:`Workspace.createPackage "
"<ar4_workspace_Workspace_createPackage>` method to create new packages in"
" your :ref:`workspace <ar4_workspace>`."
msgstr ""

#: ../../basics.rst:68
msgid ""
"Use the :ref:`Package.createSubPackage "
"<ar4_package_Package_createSubPackage>` mehod to create a new sub-package"
" inside an existing :ref:`ar4_package_Package`."
msgstr ""

#: ../../basics.rst:73
msgid "Elements"
msgstr ""

#: ../../basics.rst:75
msgid ""
"Elements are what you create and place in your :ref:`packages "
"<ar4_package_Package>`. There are different sub-packages in Python for "
"different categories of elements:"
msgstr ""

#: ../../basics.rst:78
msgid "Components"
msgstr ""

#: ../../basics.rst:79
msgid "Constants"
msgstr ""

#: ../../basics.rst:80
msgid "DataTypes"
msgstr ""

#: ../../basics.rst:81
msgid "Modes"
msgstr ""

#: ../../basics.rst:82
msgid "Ports"
msgstr ""

#: ../../basics.rst:83
msgid "PortInterfaces"
msgstr ""

#: ../../basics.rst:85
msgid ""
"The :ref:`ar4_package_Package` class offers a wide range of "
":ref:`ar4_package_Package_methods` to create new elements. These are "
"called *factory methods*."
msgstr ""

#: ../../basics.rst:87
msgid ""
"Element classes derives from the class :ref:`autosar.element.Element "
"<ar4_element_Element>`."
msgstr ""

#: ../../basics.rst:92
msgid "Short Name"
msgstr ""

#: ../../basics.rst:94
msgid ""
"Every package and element has a *name* attribute (or property). This "
"corresponds to the inner text value of the <SHORT-NAME> tag of the "
"underlying :ref:`basic_arxml`."
msgstr ""

#: ../../basics.rst:97
msgid "References"
msgstr ""

#: ../../basics.rst:99
msgid ""
"A reference is a string describing the objects absolute position within "
"the XML hierarchy. This is similar in concept to `XPath "
"<https://en.wikipedia.org/wiki/XPath>`_."
msgstr ""

#: ../../basics.rst:102
msgid ""
"In the XML, the root reference is '/'. This corressponds to the outermost"
" XML node called <AR-PACKAGES>. This is also the root of the "
":ref:`workspace <ar4_workspace>`. Any direct child node that have an "
"inner tag called <SHORT-NAME> can be accessed by adding that name to the "
"root reference. Deeper nodes can be accessed by adding the '/' character "
"followed by the next child node which in turn contains an inner <SHORT-"
"NAME> tag. Most Python objects that you will create will have two "
"properties:"
msgstr ""

#: ../../basics.rst:108
msgid "ref (str): Reference string of the object."
msgstr ""

#: ../../basics.rst:109
msgid ""
"name (str): The name of this object. This corresponds to the inner value "
"of the <SHORT-NAME> XML tag."
msgstr ""

#: ../../basics.rst:112
msgid "Example"
msgstr ""

#: ../../basics.rst:117
msgid "Output:"
msgstr ""

#: ../../basics.rst:129
msgid "Package Roles"
msgstr ""

#: ../../basics.rst:131
msgid ""
"When you are using this Python module to programmatically create AUTOSAR "
"elements it should be as easy to use as possible. For this purpose we use"
" something called package roles as a hint to Python, telling it which "
"package contain what type of elements. Package roles are usually set when"
" you create the package but can also be assigned later."
msgstr ""

#: ../../basics.rst:135
msgid ""
"To read more about how to use package roles, see the :ref:`Package Roles "
"<ar4_Roles>` guide page."
msgstr ""

#: ../../basics.rst:137
msgid ""
"For a list of methods related to package roles see the :ref:`Workspace "
"class <ar4_workspace_methods>`."
msgstr ""

#: ../../basics.rst:139
msgid ""
"Package roles are only used by the Python package which means it's not "
"stored anywhere in the XML itself."
msgstr ""

